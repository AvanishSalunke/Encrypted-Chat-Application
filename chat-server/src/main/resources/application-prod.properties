# Application Name
spring.application.name=chat-server

# Server Configuration
# Render provides the port via an environment variable. We'll default to 8080.
server.port=${PORT:8080}

# --- NO SSL SETTINGS ---
# Render's reverse proxy will handle HTTPS. Your app will run on plain HTTP inside Render.

# --- PostgreSQL Database Configuration ---
# Use environment variables for security. You will set these in the Render dashboard.
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update

# --- Disable H2 Console for Security ---
spring.h2.console.enabled=false

# Session Configuration
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
# The proxy handles security, so this is fine
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=lax

# CORS Configuration
# IMPORTANT: Replace this with your actual frontend URL once you deploy it to Vercel.
spring.web.cors.allowed-origins=https://encrypted-chat-application.vercel.app
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true